import sys
import datetime
from calourada import SistemaCalourada

def print_separador(titulo):
    """Exibe um separador com o t√≠tulo"""
    print("\n" + "="*60)
    print(f"    {titulo}")
    print("="*60)

def menu_demo():
    """Menu de demonstra√ß√£o do sistema"""
    print_separador("üéâ DEMONSTRA√á√ÉO DO SISTEMA DE CALOURADA üéâ")
    
    sistema = SistemaCalourada()
    
    # Pr√©-carregando algumas calouradas e participantes para demonstra√ß√£o
    print("\n>> Pr√©-carregando dados de demonstra√ß√£o...")
    
    # Datas para calouradas (pr√≥ximos 2 meses)
    hoje = datetime.datetime.now()
    datas = [
        (hoje + datetime.timedelta(days=15)).strftime("%d/%m/%Y"),
        (hoje + datetime.timedelta(days=30)).strftime("%d/%m/%Y"),
        (hoje + datetime.timedelta(days=45)).strftime("%d/%m/%Y")
    ]
    
    # Calouradas
    calouradas = [
        {
            "nome": "Acolhida de Ci√™ncia da Computa√ß√£o",
            "local": "Bloco 952 - CC",
            "unidade": "CC",
            "descricao": "Evento de boas-vindas para os novos alunos de CC"
        },
        {
            "nome": "Integra√ß√£o de Engenharias",
            "local": "Pra√ßa Verde",
            "unidade": "CT",
            "descricao": "Integra√ß√£o entre os cursos de engenharia"
        },
        {
            "nome": "Calourada Geral UFC",
            "local": "Centro de Conviv√™ncia",
            "unidade": "CCA",
            "descricao": "Evento para todos os novos alunos da UFC"
        }
    ]
    
    # Criar calouradas
    for i, (calourada, data) in enumerate(zip(calouradas, datas)):
        sucesso, _ = sistema.criar_calourada(
            calourada["nome"],
            data,
            calourada["local"],
            calourada["unidade"],
            calourada["descricao"]
        )
        print(f"  ‚úì Calourada criada: {calourada['nome']} ({i+1})")
    
    # Participantes
    participantes = [
        {"nome": "Jo√£o Silva", "curso_digitado": "Ci√™ncia da Computa√ß√£o", "unidade_digitada": "CC", "sexo": "M", "periodo": 1},
        {"nome": "Maria Oliveira", "curso_digitado": "Estat√≠stica", "unidade_digitada": "CC", "sexo": "F", "periodo": 2},
        {"nome": "Pedro Santos", "curso_digitado": "Engenharia Civil", "unidade_digitada": "CT", "sexo": "M", "periodo": 3},
        {"nome": "Ana Costa", "curso_digitado": "Engenharia El√©trica", "unidade_digitada": "CT", "sexo": "F", "periodo": 1}
    ]
    
    # Registrar interesse dos participantes
    sistema.demonstrar_interesse(1, participantes[0]["nome"], participantes[0]["curso_digitado"], 
                                 participantes[0]["unidade_digitada"], participantes[0]["sexo"], participantes[0]["periodo"])
    sistema.demonstrar_interesse(1, participantes[1]["nome"], participantes[1]["curso_digitado"], 
                                 participantes[1]["unidade_digitada"], participantes[1]["sexo"], participantes[1]["periodo"])
    sistema.demonstrar_interesse(2, participantes[2]["nome"], participantes[2]["curso_digitado"], 
                                 participantes[2]["unidade_digitada"], participantes[2]["sexo"], participantes[2]["periodo"])
    sistema.demonstrar_interesse(2, participantes[3]["nome"], participantes[3]["curso_digitado"], 
                                 participantes[3]["unidade_digitada"], participantes[3]["sexo"], participantes[3]["periodo"])
    print("  ‚úì Participantes registrados")
    
    print("\n‚úì Sistema pronto para demonstra√ß√£o!")
    
    # Loop principal do menu
    while True:
        print_separador("MENU DE DEMONSTRA√á√ÉO")
        print("1. Ver Todas as Calouradas")
        print("2. Ver Detalhes de uma Calourada")
        print("3. Ver Participantes de uma Calourada")
        print("4. Demonstrar Interesse")
        print("5. Cancelar Interesse")
        print("6. Ver Hist√≥rico de Opera√ß√µes")
        print("7. Buscar no Hist√≥rico")
        print("8. Desfazer √öltima Opera√ß√£o")
        print("0. Sair da Demonstra√ß√£o")
        
        try:
            opcao = input("\nEscolha uma op√ß√£o: ").strip()
            
            if opcao == "0":
                print("\nFinalizando demonstra√ß√£o. Obrigado!")
                break
                
            elif opcao == "1":
                print("\n" + sistema.listar_calouradas())
                
            elif opcao == "2":
                print("\n=== VER DETALHES DE CALOURADA ===")
                try:
                    calourada_id = int(input("Digite o ID da calourada: ").strip())
                    detalhes = sistema.buscar_calourada(calourada_id)
                    print("\n" + detalhes)
                except ValueError:
                    print("‚úó ID inv√°lido! Digite um n√∫mero.")
                    
            elif opcao == "3":
                print("\n=== VER PARTICIPANTES DE CALOURADA ===")
                try:
                    calourada_id = int(input("Digite o ID da calourada: ").strip())
                    participantes = sistema.listar_participantes(calourada_id)
                    print("\n" + participantes)
                except ValueError:
                    print("‚úó ID inv√°lido! Digite um n√∫mero.")
                    
            elif opcao == "4":
                print("\n=== DEMONSTRAR INTERESSE ===")
                
                # Listar calouradas dispon√≠veis
                print("\nCalouradas dispon√≠veis:")
                print(sistema.listar_calouradas())
                
                try:
                    calourada_id = int(input("Digite o ID da calourada: ").strip())
                    
                    # Verificar se a calourada existe
                    calourada = sistema.eventos.buscar(calourada_id)
                    if not calourada:
                        print("‚úó Calourada n√£o encontrada!")
                        continue
                    
                    # Dados do participante
                    nome = input("\nNome: ").strip()
                    
                    print("\nUnidades acad√™micas:")
                    for sigla, info in sistema.unidades.items():
                        print(f"  {sigla} - {info['nome']}")
                    unidade = input("Unidade (sigla): ").strip().upper()
                    
                    if unidade in sistema.unidades:
                        print("\nCursos dispon√≠veis:")
                        for i, curso in enumerate(sistema.unidades[unidade]["cursos"], 1):
                            print(f"  {i}. {curso}")
                        
                        curso_input = input("Curso (nome ou n√∫mero): ").strip()
                        try:
                            idx = int(curso_input) - 1
                            if 0 <= idx < len(sistema.unidades[unidade]["cursos"]):
                                curso = sistema.unidades[unidade]["cursos"][idx]
                            else:
                                curso = curso_input
                        except ValueError:
                            curso = curso_input
                            
                        sexo = input("Sexo (M/F/O): ").strip().upper()
                        
                        try:
                            periodo = int(input("Per√≠odo (1-12): ").strip())
                            
                            # Registrar interesse
                            sucesso, mensagem = sistema.demonstrar_interesse(
                                calourada_id, nome, curso, unidade, sexo, periodo
                            )
                            print(f"\n{'‚úì' if sucesso else '‚úó'} {mensagem}")
                            
                        except ValueError:
                            print("‚úó Per√≠odo deve ser um n√∫mero!")
                    else:
                        print(f"‚úó Unidade {unidade} n√£o encontrada!")
                        
                except ValueError:
                    print("‚úó ID inv√°lido! Digite um n√∫mero.")
                    
            elif opcao == "5":
                print("\n=== CANCELAR INTERESSE ===")
                
                # Listar calouradas dispon√≠veis
                print("\nCalouradas dispon√≠veis:")
                print(sistema.listar_calouradas())
                
                try:
                    calourada_id = int(input("Digite o ID da calourada: ").strip())
                    
                    # Verificar se a calourada existe
                    calourada = sistema.eventos.buscar(calourada_id)
                    if not calourada:
                        print("‚úó Calourada n√£o encontrada!")
                        continue
                    
                    # Listar participantes
                    print("\n" + sistema.listar_participantes(calourada_id))
                    
                    # Se n√£o houver participantes, voltar ao menu
                    if calourada.participantes.tamanho == 0:
                        continue
                    
                    nome = input("\nDigite o nome do participante: ").strip()
                    
                    # Cancelar interesse
                    sucesso, mensagem = sistema.cancelar_interesse(calourada_id, nome)
                    print(f"\n{'‚úì' if sucesso else '‚úó'} {mensagem}")
                    
                except ValueError:
                    print("‚úó ID inv√°lido! Digite um n√∫mero.")
                    
            elif opcao == "6":
                print("\n=== HIST√ìRICO DE OPERA√á√ïES ===")
                
                try:
                    limite = input("Quantas opera√ß√µes mostrar? (padr√£o 10): ").strip()
                    limite = int(limite) if limite else 10
                    print("\n" + sistema.ver_historico(limite))
                except ValueError:
                    print("\n" + sistema.ver_historico())
                    
            elif opcao == "7":
                print("\n=== BUSCAR NO HIST√ìRICO ===")
                print("Tipos de busca:")
                print("1. Por tipo de a√ß√£o (CRIAR_CALOURADA, DEMONSTRAR_INTERESSE, etc.)")
                print("2. Por nome de participante")
                print("3. Por ID de calourada")
                print("4. Por detalhes")
                
                tipo_opcao = input("\nEscolha o tipo de busca (1-4): ").strip()
                
                tipo_busca = None
                if tipo_opcao == "1":
                    tipo_busca = "acao"
                    print("\nA√ß√µes dispon√≠veis:")
                    print("- CRIAR_CALOURADA")
                    print("- DEMONSTRAR_INTERESSE")
                    print("- CANCELAR_INTERESSE")
                    print("- DESFAZER")
                elif tipo_opcao == "2":
                    tipo_busca = "participante"
                elif tipo_opcao == "3":
                    tipo_busca = "calourada_id"
                elif tipo_opcao == "4":
                    tipo_busca = "detalhes"
                else:
                    print("‚úó Op√ß√£o inv√°lida!")
                    continue
                
                termo = input(f"\nDigite o termo para buscar por {tipo_busca}: ").strip()
                if termo:
                    resultado = sistema.buscar_no_historico(termo, tipo_busca)
                    print("\n" + resultado)
                else:
                    print("‚úó Termo de busca n√£o pode ser vazio!")
                    
            elif opcao == "8":
                print("\n=== DESFAZER √öLTIMA OPERA√á√ÉO ===")
                
                # Mostrar √∫ltima opera√ß√£o
                print("\n√öltima opera√ß√£o:")
                print(sistema.ver_historico(1))
                
                confirmacao = input("\nDeseja desfazer esta opera√ß√£o? (s/N): ").strip().lower()
                if confirmacao == "s":
                    sucesso, mensagem = sistema.desfazer_ultima_operacao()
                    print(f"\n{'‚úì' if sucesso else '‚úó'} {mensagem}")
                else:
                    print("\n‚úì Opera√ß√£o cancelada")
                    
            else:
                print("\n‚úó Op√ß√£o inv√°lida! Tente novamente.")
                
            # Pausa para o usu√°rio ler o resultado
            input("\nPressione Enter para continuar...")
            
        except KeyboardInterrupt:
            print("\n\nDemonstra√ß√£o encerrada.")
            break
        except Exception as e:
            print(f"\n‚úó Erro inesperado: {str(e)}")
            print("Tente novamente.")
            input("\nPressione Enter para continuar...")

if __name__ == "__main__":
    if 'win' in sys.platform:
        # Configura√ß√£o para Windows
        import locale
        locale.setlocale(locale.LC_ALL, 'Portuguese_Brazil.1252')
    
    print("\nBem-vindo ao sistema de demonstra√ß√£o da Calourada!")
    print("Este programa permite testar todas as funcionalidades do sistema.")
    menu_demo()
